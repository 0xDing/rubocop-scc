require: rubocop/cop/sequioacap

Rails:
  Enabled: true

Rails/ActionFilter:
  Enabled: true

Rails/ApplicationJob:
  Enabled: true

Rails/ApplicationRecord:
  Enabled: true

Rails/Blank:
  Enabled: true

Rails/Date:
  Enabled: true

Rails/Delegate:
  Enabled: true

Rails/DelegateAllowBlank:
  Enabled: true

Rails/EnumUniqueness:
  Enabled: true

Rails/EnvironmentComparison:
  Enabled: true

Rails/Exit:
  Enabled: true

Rails/FilePath:
  Enabled: true

Rails/FindBy:
  Enabled: true

Rails/HasAndBelongsToMany:
  Enabled: true

Rails/HasManyOrHasOneDependent:
  Enabled: true

Rails/HttpPositionalArguments:
  Enabled: true

Rails/InverseOf:
  Enabled: true

Rails/FindEach:
  Enabled: false

Rails/LexicallyScopedActionFilter:
  Enabled: true

Rails/NotNullColumn:
  Enabled: false

Rails/SafeNavigation:
  Enabled: true
  ConvertTry: true

Rails/Output:
  Enabled: true

Rails/OutputSafety:
  Enabled: true

Rails/PluralizationGrammar:
  Enabled: true

Rails/ReadWriteAttribute:
  Enabled: true

Rails/RedundantReceiverInWithOptions:
  Enabled: true

Rails/RelativeDateConstant:
  Enabled: true

Rails/RequestReferer:
  Enabled: true
  EnforcedStyle: referrer

Rails/TimeZone:
  Enabled: true

Rails/ScopeArgs:
  Enabled: true

Rails/Validation:
  Enabled: true

Rails/UniqBeforePluck:
  Enabled: true

Sequioacap/RailsControllerRenderActionSymbol:
  Enabled: true
  Include:
    - 'app/controllers/**/*.rb'

Sequioacap/RailsControllerRenderLiteral:
  Enabled: true
  StyleGuide: https://github.com/github/rubocop-github/blob/master/guides/rails-render-literal.md
  Include:
    - 'app/controllers/**/*.rb'

Sequioacap/RailsControllerRenderPathsExist:
  Enabled: true
  ViewPath:
    - 'app/views'
  Include:
    - 'app/controllers/**/*.rb'

Sequioacap/RailsControllerRenderShorthand:
  Enabled: true
  StyleGuide: https://github.com/github/rubocop-github/blob/master/guides/rails-controller-render-shorthand.md
  Include:
    - 'app/controllers/**/*.rb'

Sequioacap/ClassName:
  Description: Use :class_name => "Model" instead of :class_name => Model.name
    to avoid a long cascade of autoloading.
  Enabled: true

Sequioacap/DefaultScope:
  Description: Avoid `default_scope`.  Default scopes make it difficult to
    refactor data access patterns since the scope becomes part of every query unless
    explicitly excluded, even when it is unnecessary or incidental to the desired logic.
  Enabled: true

Sequioacap/FactoryClassUseString:
  Description: Cop to tell developers to use :class => "MyClass" instead of :class => MyClass,
    because the latter slows down reloading zeus.
  Enabled: true

Sequioacap/NoTimeout:
  Description: Do not use Timeout.timeout. In combination with Rails autoloading,
    timeout can cause Segmentation Faults in version of Ruby we use.
    It can also cause logic errors since it can raise in
    any callee scope. Use client library timeouts and monitoring to
    ensure proper timing behavior for web requests.
  Enabled: true

Sequioacap/SimpleModifierConditional:
  Enabled: true
  StyleGuide: https://github.com/airbnb/ruby#only-simple-if-unless

# Exclude Rails ERB files from incompatible cops

Lint/BlockAlignment:
  Exclude:
    - 'app/views/**/*.erb'

Style/For:
  Exclude:
    - 'app/views/**/*.erb'

Style/OneLineConditional:
  Exclude:
    - 'app/views/**/*.erb'

Style/Semicolon:
  Exclude:
    - 'app/views/**/*.erb'

Layout/SpaceInsideParens:
  Exclude:
    - 'app/views/**/*.erb'

Style/StringLiterals:
  Exclude:
    - 'app/views/**/*.erb'

Layout/TrailingBlankLines:
  Exclude:
    - 'app/views/**/*.erb'

Layout/TrailingWhitespace:
  Exclude:
    - 'app/views/**/*.erb'
